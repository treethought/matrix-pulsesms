stages:
  - build
  - build docker
  - manifest

.build: &build
  stage: build
  cache:
    paths:
      - .cache
  before_script:
    - mkdir -p .cache
    - export GOPATH="$CI_PROJECT_DIR/.cache"
    - export GOCACHE="$CI_PROJECT_DIR/.cache/build"
    - export GO_LDFLAGS="-linkmode external -extldflags -static -X main.Tag=$CI_COMMIT_TAG -X main.Commit=$CI_COMMIT_SHA -X 'main.BuildTime=`date '+%b %_d %Y, %H:%M:%S'`'"
  script:
    - go build -ldflags "$GO_LDFLAGS" -o matrix-pulsesms
  artifacts:
    paths:
      - matrix-pulsesms
      - example-config.yaml

build amd64:
  <<: *build
  image: dock.mau.dev/tulir/gomuks-build-docker:linux-amd64

build arm64:
  <<: *build
  image: dock.mau.dev/tulir/gomuks-build-docker:linux-arm64

build arm:
  <<: *build
  image: dock.mau.dev/tulir/gomuks-build-docker:linux-arm

build-docker:
  image: docker:stable
  stage: build docker
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --pull --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA-$DOCKER_ARCH
